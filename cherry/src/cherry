#!/bin/bash

# set variables
CONTAINER_CONFIG_DIR="/etc/containerconf"
USER_CONTAINER_CONFIG_DIR="$CONTAINER_CONFIG_DIR/$USER"
CONTAINER_LIST_FILE="$CONTAINER_CONFIG_DIR/configs.d/.cherry/list.txt"
CONTAINER_OVERRIDE_CONFIG="$HOME/.config/containerconf.d/override.conf"
FILENAME_TMP=$(head /dev/urandom | tr -dc A-Za-z0-9 | head -c 35 ; echo '')
PS3="> "

# set functions
help() {
  cat <<EOF 
Usage: cherry <subcommand> [option]

Subcommands:
  stem                        baseOS commands
  branch                      containerOS commands
  pesticide                   FSguard commands
  version                     show program version
  help                        show this dialogue
EOF
}

stem-help() {
  cat <<EOF
Usage: cherry stem [option]

Options:
  root                        run a command on the host system
  grow                        upgrade the host system and related utils
  status                      show the status of the host system
  help                        show this dialogue
EOF
}

branch-help() {
  cat <<EOF
Usage: cherry branch [option]

Options:
  grow                        create a new container
  snap <container_name>       remove an existing container
  cut <container_name>        save the specified container to an image
  attach <image_path>         load a container from an image
  jump <container_name>       switch to a different container
  list                        list all containers
  help                        show this dialogue
EOF
}

pesticide-help() {
  cat <<EOF
Usage: cherry pesticide [option]

Options:
  status                      show the status of enrolled directories
  check                       check the integrity of enrolled directories
  apply                       enroll a new directory
  help                        show this dialogue
EOF
}

status() {
  cat <<EOF
bourbonOS $(cat /etc/bourbonOS-version)
pesticide: $(/usr/libexec/pesticide/status) $(/usr/libexec/pesticide/version)
=======================
host: $(hostname)
kargs: $(cat /proc/cmdline)
kernver: $(uname -r)
=======================
current container: $CONTAINER_ID
containers:
$(distrobox-list | awk '{print $3}' | grep -v -e '^NAME$' -e '^cherry-cli$')
=======================
ostree status:
$(pkexec bootc status)
EOF
}

version() {
  echo "cherry v2.3.0"
}

# main function
case "$1" in
  stem)
    shift
    case "$1" in
      root)
          shift
          distrobox-host-exec "$@"
          ;;
      grow)
          clear
          echo "OS Upgrade Starting..."
          echo "Upgrade logs also accessible at /tmp/topgrade.log-$FILENAME_TMP"
          topgrade | tee /tmp/topgrade.log-$FILENAME_TMP
          if [[ $? -eq 0 ]]; then
              echo "OS Upgrade Complete!"
          else
              echo "OS Upgrade Failed! Check the logs at /tmp/topgrade.log-$FILENAME_TMP for full detail."
          fi
          ;;
      status)
          status
          ;;
      help)
          stem-help
          ;;
      *)
          stem-help
          exit 1
          ;;
    esac
    ;;
  branch)
    shift
    case "$1" in
      "grow")
          echo "Do you want to:"
          select container in "Choose from a list of images" "Specify your own (advanced)"; do
              if [[ -n $container ]]; then
                  case "$container" in
                      "Choose from a list of images")
                          echo "Select an image from the list:"
                          select image in $(cat /etc/containerconf/.cherry/list.txt); do
                              if [[ -n $image ]]; then
                                  distrobox-assemble create --file "/etc/containerconf/$image.ini"
                                  echo "Done! You can switch to the container using 'cherry branch jump'."
                                  break
                              else
                                  echo "Invalid selection."
                                  exit 1
                              fi
                          done
                          ;;
                      "Specify your own (advanced)")
                          read -p "Container URL/alias: " manual_container_url
                          read -p "Container name: " manual_container_name
                          echo "An editor will open to allow you to specify additional options."
                          echo "If you do not know how to specify additional options in the editor,"
                          echo "Please type the word help and press enter."
                          echo "When you're done looking at the help file, press q to exit."
                          echo "Then, reselect 'Specify your own (advanced)' to continue."
                          echo "If you don't need help, just press enter."
                          read -p "> " container_help_var
                          if [[ "$container_help_var" == "help" ]]; then
                              less /etc/containerconf/.cherry/editor-syntax.txt
                              new_container
                          else
                              cp /etc/containerconf/.ini-template "/tmp/$FILENAME_TMP.ini"
                              sed -i "s/<name>/$manual_container_name/g" "/tmp/$FILENAME_TMP.ini"
                              sed -i "s/<url>/$manual_container_url/g" "/tmp/$FILENAME_TMP.ini"
                              nano "/tmp/$FILENAME_TMP.ini"
                              distrobox-assemble create --file "/tmp/$FILENAME_TMP.ini"
                              rm "/tmp/$FILENAME_TMP.ini"
                          fi
                          echo "Done! You can switch to the container using 'cherry branch jump'."
                          exit 0
                          ;;
                      *)
                          echo "Invalid choice."
                          exit 1
                          ;;
                  esac
              fi
          done
          ;;
      "snap")
          if [[ -z $(distrobox-list | awk '{print $3}' | grep -v -e '^NAME$' -e '^cherry-cli$') ]]; then
              echo "No containers to remove."
              exit 1
          else
              echo "Select a container by its number to remove it."
              select container in $(distrobox-list | awk '{print $3}' | grep -v -e '^NAME$' -e '^cherry-cli$'); do
                  if [[ -n $container ]]; then
                      distrobox-rm "$container"
                      break
                  else
                      echo "Invalid selection."
                      exit 1
                  fi
              done
          fi
          ;;
      "cut")
          if [[ -z $(distrobox-list | awk '{print $3}' | grep -v -e '^NAME$' -e '^cherry-cli$') ]]; then
              echo "No containers to save."
              exit 1
          else
              echo "Select a container by its number to save it to an image."
              select container in $(distrobox-list | awk '{print $3}' | grep -v -e '^NAME$' -e '^cherry-cli$'); do
                  if [[ -n $container ]]; then
                      podman save "$container" "$HOME/$container.tar"
                      echo "Container image saved at $HOME/$container.tar"
                      break
                  else
                      echo "Invalid selection."
                      exit 1
                  fi
              done
          fi
          ;;
      "attach")
          shift
          if [[ ! -f "$1" ]]; then
              echo "Error: Image path not found."
              exit 1
          fi
          podman load "$1"
          echo "Container loaded from $1. You can switch to it using 'cherry branch jump'."
          ;;
      "jump")
          if [[ -z $(distrobox-list | awk '{print $3}' | grep -v -e '^NAME$' -e '^cherry-cli$') ]]; then
              echo "No containers to switch to."
              exit 1
          else
              echo "Select a container by its number to switch to it."
              select container in $(distrobox-list | awk '{print $3}' | grep -v '^NAME$' | sed 's/^cherry-cli$/default container/'); do
                  if [[ -n $container ]]; then
                      exec distrobox-enter "$container" -- bash
                  else
                      echo "Invalid selection."
                      exit 1
                  fi
              done
          fi
          ;;
      "list")
          distrobox-list | awk '{print $3}' | grep -v -e '^NAME$' -e '^cherry-cli$'
          ;;
      "help")
          branch-help
          ;;
      *)
          echo "Error: Invalid option."
          branch-help
          exit 1
          ;;
    esac
    ;;
  pesticide)
    shift
    case "$1" in
      status)
          /usr/libexec/pesticide/status
          ;;
      check)
          /usr/libexec/pesticide/check
          ;;
      apply)
          shift
          /usr/libexec/pesticide/enroll "$@"
          ;;
      help)
          pesticide-help
          ;;
      *)
          pesticide-help
          exit 1
          ;;
    esac
    ;;
  version)
    version
    ;;
  help)
    help
    ;;
  *)
    help
    exit 1
    ;;
esac